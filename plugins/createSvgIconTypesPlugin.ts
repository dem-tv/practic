import fs from 'node:fs/promises';
import type { ViteDevServer } from 'vite';

interface Params {
  iconsDir: string;
  generatedFileName?: string;
}

function createSvgIconTypesPlugin({ iconsDir, generatedFileName = 'iconTypes.d.ts' }: Params) {
  const generateIcons = async () => {
    try {
      const fileComment = '// Generated by /plugins/createSvgIconTypesPlugin';

      const filesList = await fs.readdir(iconsDir).catch(() => {
        console.warn(
          `Failed to read directory ${iconsDir}. File ${generatedFileName} was overwritten without icon types`,
        );
      });

      const iconList = (filesList || []).filter((fileName) => fileName.endsWith('.svg'));

      const preparedList = iconList
        .map((fileName) => `\n  | '${fileName.replace(/\.svg$/, '')}'`)
        .join('');

      const content = `${fileComment}\n\ndeclare type IconType =${preparedList || ' never'};\n`;

      await fs.writeFile(`./src/${generatedFileName}`, content);
    } catch (err) {
      throw new Error(`Failed generating ${generatedFileName}; ${err}`);
    }
  };

  return {
    name: 'SvgIconTypesPlugin',
    configureServer(server: ViteDevServer) {
      server.watcher.add(iconsDir);
      server.watcher.on('add', generateIcons);
      server.watcher.on('unlink', generateIcons);
      generateIcons();
    },
  };
}

export default createSvgIconTypesPlugin;
